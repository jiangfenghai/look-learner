{
	"compiler": {
		"version": "0.8.28+commit.7893614a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_storageContract",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_nftFactoryContract",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_fee",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_recipientAddress",
						"type": "address"
					}
				],
				"stateMutability": "payable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "OwnableInvalidOwner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "OwnableUnauthorizedAccount",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ReentrancyGuardReentrantCall",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "orderId",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "wrappedNFTContract",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "p",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "op",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "tick",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amt",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "limit",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "seller",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "unitPrice",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "symbol",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "createTime",
						"type": "uint256"
					}
				],
				"name": "OrderListed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "orderId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "buyer",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "seller",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "p",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "op",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "tick",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amt",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "limit",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "unitPrice",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "symbol",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "soldTime",
						"type": "uint256"
					}
				],
				"name": "OrderSold",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "orderId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "p",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "op",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "tick",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amt",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "limit",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "seller",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "unitPrice",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "symbol",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "unlistTime",
						"type": "uint256"
					}
				],
				"name": "OrderUnlisted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "orderId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newUnitPrice",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "p",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "op",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "tick",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amt",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "limit",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "seller",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "symbol",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "updateTime",
						"type": "uint256"
					}
				],
				"name": "OrderUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "Sender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "Value",
						"type": "uint256"
					}
				],
				"name": "Received",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "p",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "op",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "tick",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "UnWrap",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "p",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "tick",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "chainId",
						"type": "uint256"
					}
				],
				"name": "Wrap",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "orderId",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "buyAmount",
						"type": "uint256"
					}
				],
				"name": "acceptOrder",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_checkId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_partCount",
						"type": "uint256"
					}
				],
				"name": "buyFraction",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "orderId",
						"type": "bytes32"
					}
				],
				"name": "cancelOrder",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "checkCounter",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "checkNFTs",
				"outputs": [
					{
						"internalType": "address",
						"name": "seller",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tokenContract",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "totalAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "remainingAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "pricePerUnit",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "exists",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_tokenContract",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_totalAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_pricePerUnit",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "createCheck",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "bool",
								"name": "exists",
								"type": "bool"
							},
							{
								"internalType": "bytes32",
								"name": "orderId",
								"type": "bytes32"
							},
							{
								"internalType": "address",
								"name": "wrappedNFTContract",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "tokenId",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "tokenSymbol",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "tokenContract",
								"type": "address"
							},
							{
								"components": [
									{
										"internalType": "string",
										"name": "p",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "op",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "tick",
										"type": "string"
									},
									{
										"internalType": "uint256",
										"name": "amt",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "limit",
										"type": "uint256"
									}
								],
								"internalType": "struct IInscriptionCommon.Inscription",
								"name": "inscription",
								"type": "tuple"
							},
							{
								"internalType": "uint256",
								"name": "remainingAmt",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "seller",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "unitPrice",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "createTime",
								"type": "uint256"
							}
						],
						"internalType": "struct IInscriptionCommon.Order",
						"name": "order",
						"type": "tuple"
					}
				],
				"name": "createOrder",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "fee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "nftContract",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "genOrderId",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "getMyOrders",
				"outputs": [
					{
						"components": [
							{
								"internalType": "bool",
								"name": "exists",
								"type": "bool"
							},
							{
								"internalType": "bytes32",
								"name": "orderId",
								"type": "bytes32"
							},
							{
								"internalType": "address",
								"name": "wrappedNFTContract",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "tokenId",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "tokenSymbol",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "tokenContract",
								"type": "address"
							},
							{
								"components": [
									{
										"internalType": "string",
										"name": "p",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "op",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "tick",
										"type": "string"
									},
									{
										"internalType": "uint256",
										"name": "amt",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "limit",
										"type": "uint256"
									}
								],
								"internalType": "struct IInscriptionCommon.Inscription",
								"name": "inscription",
								"type": "tuple"
							},
							{
								"internalType": "uint256",
								"name": "remainingAmt",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "seller",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "unitPrice",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "createTime",
								"type": "uint256"
							}
						],
						"internalType": "struct IInscriptionCommon.Order[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "page",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "pageSize",
						"type": "uint256"
					}
				],
				"name": "getOrders",
				"outputs": [
					{
						"components": [
							{
								"internalType": "bool",
								"name": "exists",
								"type": "bool"
							},
							{
								"internalType": "bytes32",
								"name": "orderId",
								"type": "bytes32"
							},
							{
								"internalType": "address",
								"name": "wrappedNFTContract",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "tokenId",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "tokenSymbol",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "tokenContract",
								"type": "address"
							},
							{
								"components": [
									{
										"internalType": "string",
										"name": "p",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "op",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "tick",
										"type": "string"
									},
									{
										"internalType": "uint256",
										"name": "amt",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "limit",
										"type": "uint256"
									}
								],
								"internalType": "struct IInscriptionCommon.Inscription",
								"name": "inscription",
								"type": "tuple"
							},
							{
								"internalType": "uint256",
								"name": "remainingAmt",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "seller",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "unitPrice",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "createTime",
								"type": "uint256"
							}
						],
						"internalType": "struct IInscriptionCommon.Order[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getOrdersTotal",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "wallet",
						"type": "address"
					}
				],
				"name": "getTradeRecordsByAddress",
				"outputs": [
					{
						"components": [
							{
								"components": [
									{
										"internalType": "bool",
										"name": "exists",
										"type": "bool"
									},
									{
										"internalType": "bytes32",
										"name": "orderId",
										"type": "bytes32"
									},
									{
										"internalType": "address",
										"name": "wrappedNFTContract",
										"type": "address"
									},
									{
										"internalType": "uint256",
										"name": "tokenId",
										"type": "uint256"
									},
									{
										"internalType": "string",
										"name": "tokenSymbol",
										"type": "string"
									},
									{
										"internalType": "address",
										"name": "tokenContract",
										"type": "address"
									},
									{
										"components": [
											{
												"internalType": "string",
												"name": "p",
												"type": "string"
											},
											{
												"internalType": "string",
												"name": "op",
												"type": "string"
											},
											{
												"internalType": "string",
												"name": "tick",
												"type": "string"
											},
											{
												"internalType": "uint256",
												"name": "amt",
												"type": "uint256"
											},
											{
												"internalType": "uint256",
												"name": "limit",
												"type": "uint256"
											}
										],
										"internalType": "struct IInscriptionCommon.Inscription",
										"name": "inscription",
										"type": "tuple"
									},
									{
										"internalType": "uint256",
										"name": "remainingAmt",
										"type": "uint256"
									},
									{
										"internalType": "address",
										"name": "seller",
										"type": "address"
									},
									{
										"internalType": "uint256",
										"name": "unitPrice",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "createTime",
										"type": "uint256"
									}
								],
								"internalType": "struct IInscriptionCommon.Order",
								"name": "order",
								"type": "tuple"
							},
							{
								"internalType": "address",
								"name": "from",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "to",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "op",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "time",
								"type": "uint256"
							}
						],
						"internalType": "struct IInscriptionCommon.TradeRecord[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getTradingCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "getUserWrappedInscriptions",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "tokenId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "chainId",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "tick",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "protocol",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "owner",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "contractAddr",
								"type": "address"
							}
						],
						"internalType": "struct INFTWrapFactory.EthscriptionToNFT[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getVolume",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenContract",
						"type": "address"
					}
				],
				"name": "getVolumeByToken",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "nftContract",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "isListed",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "isNFTListed",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "nftFactoryContract",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "recipientAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_fee",
						"type": "uint256"
					}
				],
				"name": "setFee",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newNFTFactoryContract",
						"type": "address"
					}
				],
				"name": "setNFTFactoryContract",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newRecipient",
						"type": "address"
					}
				],
				"name": "setRecipientAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newStorageContract",
						"type": "address"
					}
				],
				"name": "setStorageContract",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "status",
						"type": "bool"
					}
				],
				"name": "setWithdrawWL",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "storageContract",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bool",
						"name": "status",
						"type": "bool"
					}
				],
				"name": "switchMarketStatus",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "orderId",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "unitPrice",
						"type": "uint256"
					}
				],
				"name": "updateOrder",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdrawForWL",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenContract",
						"type": "address"
					}
				],
				"name": "withdrawToken",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenContract",
						"type": "address"
					}
				],
				"name": "withdrawTokenForWL",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "withdrawWL",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"errors": {
				"OwnableInvalidOwner(address)": [
					{
						"details": "The owner is not a valid owner account. (eg. `address(0)`)"
					}
				],
				"OwnableUnauthorizedAccount(address)": [
					{
						"details": "The caller account is not authorized to perform an operation."
					}
				],
				"ReentrancyGuardReentrantCall()": [
					{
						"details": "Unauthorized reentrant call."
					}
				]
			},
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"events": {
				"OrderListed(bytes32,address,uint256,string,string,string,uint256,uint256,address,uint256,string,uint256)": {
					"notice": "挂单事件：当一个订单被上架 "
				},
				"OrderSold(bytes32,address,address,string,string,string,uint256,uint256,uint256,string,uint256)": {
					"notice": "成交事件 "
				},
				"OrderUnlisted(bytes32,string,string,string,uint256,uint256,address,uint256,string,uint256)": {
					"notice": "取消挂单事件 "
				},
				"OrderUpdated(bytes32,uint256,string,string,string,uint256,uint256,address,string,uint256)": {
					"notice": "更新订单价格等信息事件 "
				},
				"Received(address,uint256)": {
					"notice": "接收 ETH 时的事件（fallback/receive） "
				},
				"UnWrap(string,string,string,uint256,address)": {
					"notice": "NFT 解包为铭文的事件 "
				},
				"Wrap(string,string,uint256,address,uint256)": {
					"notice": "铭文包装为 NFT 的事件 "
				}
			},
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"nftProject/InscriptionMarket.sol": "InscriptionMarket"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 500
		},
		"remappings": [],
		"viaIR": true
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
			"license": "MIT",
			"urls": [
				"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
				"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2",
			"license": "MIT",
			"urls": [
				"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303",
				"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV"
			]
		},
		"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
			"keccak256": "0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f",
			"license": "MIT",
			"urls": [
				"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3",
				"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
			"keccak256": "0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3",
			"license": "MIT",
			"urls": [
				"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a",
				"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA"
			]
		},
		"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c",
			"license": "MIT",
			"urls": [
				"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617",
				"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u"
			]
		},
		"hardhat/console.sol": {
			"keccak256": "0xf2560b5386574153057104d19a9e68a32ee912cf23c0c8df1fe9a0607f42d543",
			"license": "MIT",
			"urls": [
				"bzz-raw://a63166e036b040826baa513772451a79925daa304b38749100efb089ac07cdc2",
				"dweb:/ipfs/QmUtMTxUFKU6a5oFXsEJnTPvb3QPb7GDDmSv5yZ1jFHDwR"
			]
		},
		"nftProject/Constants.sol": {
			"keccak256": "0x0c66248466923cda5f9014f5a31458e67544d37c97593e8ad751388b591fda47",
			"license": "MIT",
			"urls": [
				"bzz-raw://a18ce02935614732372628b9ce883ef764753008cfba2256ba1e026f7021c0dc",
				"dweb:/ipfs/QmQq2Vek49dFu92sFcYfisrdrkvtCB4uUFqDMTevzPgTd5"
			]
		},
		"nftProject/InscriptionMarket.sol": {
			"keccak256": "0x6a1b6c29b64af1e7fafe93ae8c18c091c9a951df18dc914b193a8a417e86dca9",
			"license": "MIT",
			"urls": [
				"bzz-raw://59ce78b089d7c17f7d0d90264ba4604a227a1fd3153c88643857c60dd4402fa6",
				"dweb:/ipfs/QmZcrmGKpTZJHs7JwKFMwnPYrSEtgKhUk8gK8mS3H5aQMG"
			]
		},
		"nftProject/interfaces/IInscriptionCommon.sol": {
			"keccak256": "0xf9533b25b89fe1992822b96ada3d69fbf3c742f9f7bf3f6b3fd5437ae61b7db5",
			"license": "MIT",
			"urls": [
				"bzz-raw://11461568edb696974f4c07686c8f66f93dddba2c9138253e2ea2d62fedb4054d",
				"dweb:/ipfs/QmPPSw5uqNPTFG18zTgBkcBubm425rXtQ1nT82eaxNF23k"
			]
		},
		"nftProject/interfaces/IInscriptionMarket.sol": {
			"keccak256": "0x16977085c0edc6fd49c371452a7520fcbd751680b924c96094bc9bf436042029",
			"license": "MIT",
			"urls": [
				"bzz-raw://4571d74d04cb3eda0dd547103b273e649faba6c0d3ba42c6b2d77da6c06aca3c",
				"dweb:/ipfs/QmTndeA5RJeiFqXXXL7RMDAP56EWnh6PeAjqUvSmqweDVX"
			]
		},
		"nftProject/interfaces/INFTWrapFactory.sol": {
			"keccak256": "0x504cfb63a317d716f0090381598beda151a927cc0248895e0bfebd04df3d9a3f",
			"license": "MIT",
			"urls": [
				"bzz-raw://5dfe9cffe48a8422f09ca04741342dbb990305434531308aedb8487c8cb9498c",
				"dweb:/ipfs/QmU19cGEGVfDG4B3qg2urMz7rdvh6Kdkj7RmfuvrGZZohj"
			]
		},
		"nftProject/interfaces/InscriptionStorageImpl.sol": {
			"keccak256": "0x7234a8839bceeadb5115cf74a4c0ad7a273263faab271e5b15002229c4d46cdf",
			"license": "MIT",
			"urls": [
				"bzz-raw://9cc9a70c01b4b28e625a87d19f5fb106db33c8b39096e2289b61447181a191fe",
				"dweb:/ipfs/QmPw7kuWf8G6DvvkVVeemUXsPksw9WFspCcx7rEWDakjPY"
			]
		}
	},
	"version": 1
}